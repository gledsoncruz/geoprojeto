$(document).ready(function(){

$("#insc").attr('maxlength','8');


$("#frmcons").keypress(function(e) {
  if ( e.which == 13 )
    return false;
});


L.Icon.Default.imagePath = "/assets"
console.log(L.Icon.Default.imagePath);

var cloudmadeUrl = 'http://{s}.tile.cloudmade.com/BC9A493B41014CAABB98F0471D759707/{styleId}/256/{z}/{x}/{y}.png',
    cloudmadeAttribution = 'Map data &copy; 2011 OpenStreetMap contributors, Imagery &copy; 2011 CloudMade';

var nightTime = L.tileLayer(cloudmadeUrl, {
        styleId:999
    });

var googleRoadMap = new L.Google('ROADMAP');
var googleSatellite = new L.Google('SATELLITE');

var limite = new L.TileLayer.WMS("http://geo.epdvr.com.br/geoserver/wms", {
            layers: 'nebulosa:limitevr_oficial',
            format: 'image/png',
            transparent: true
        });

var bairros = new L.TileLayer.WMS("http://geo.epdvr.com.br/geoserver/wms", {
            layers: 'nebulosa:bairros_oficial',
            format: 'image/png',
            transparent: true
        });


var zoneamento = new L.TileLayer.WMS("http://geo.epdvr.com.br/geoserver/wms", {
            layers: 'nebulosa:zonas',
            format: 'image/png',
            transparent: true
        });

var logradouros = new L.TileLayer.WMS("http://geo.epdvr.com.br/geoserver/wms", {
            layers: 'nebulosa:eixo_rua',
            format: 'image/png',
            transparent: true
        });



// create a map in the "map" div, set the view to a given place and zoom
var map = L.map('map', {maxZoom: 25, minZoom: 13, layers: [limite, bairros, googleRoadMap ]}).setView([-22.511447, -44.108906], 13);

/*geojson*/

function zoomToFeature(e) {
    map.fitBounds(e.target.getBounds());
}

function style(feature) {
    return {
        fillColor: '#FF0000',
        weight: 2,
        opacity: 1,
        color: 'white',
        dashArray: '3',
        fillOpacity: 0.3
    };
}

function onEducacaoFeature(feature, layer) {
    if (feature.properties && feature.properties.nome) {
        layer.bindPopup("<p><b>Nome:</b> "+feature.properties.nome+"</p>");
    }
}



function onLotesFeatures(feature, layer) {
   // if (feature.properties && feature.properties.cadastro) {


         layer.bindPopup("<p>"+
          "<b>Inscrição:</b> "+feature.properties.cadastro+"</br>"+
          "<a href='show/"+feature.properties.cadastro+"'>Mais detalhes</a>"+/*
          "<b>Proprietário:</b> "+feature.properties.proprietario+"</br>"+
            "<b>Situação:</b> "+feature.properties.situacao+"</br>"+
            "<b>Tipo de Obra:</b> "+feature.properties.tipoobra+"</br>"+
            "<b>Loteamento:</b> "+feature.properties.loteamento+"</br>"+
            "<b>Tipo de Terreno:</b> "+feature.properties.tipoterreno+"</br>"+
            "<b>Identificação de Quadra:</b> "+feature.properties.identquadra+"</br>"+
            "<b>Testada:</b> "+feature.properties.testada+"</br>"+
            "<b>Área do Lote:</b> "+feature.properties.areadolote+"</br>"+
            "<b>Área Construída:</b> "+feature.properties.areaconstruida+"</br>"+
            "<b>Conservação:</b> "+feature.properties.conservacao+"</br>"+
            "<b>Benefício:</b> "+feature.properties.beneficio+"</br>"+
            "<b>Melhoria:</b> "+feature.properties.melhoria+"</br>"+
            "<b>Data Cadastro:</b> "+feature.properties.dtcadastro+"</br>"+*/
            "</p>");
    //}
}

var educacao = new L.GeoJSON(null, {onEachFeature: onEducacaoFeature});
var lotes = new L.GeoJSON(null, {onEachFeature: onLotesFeatures, style: style});
var lotesCount = 0;


function educacaoJson(data) {
  educacao.addData(data);
}

function lotesJson(data) {
    lotes.addData(data);
    lotesCount = Object.keys(data.features).length;
    console.log(lotesCount);
    map.fitBounds(lotes.getBounds());
}

function carregarLayer(insc){

 console.log(insc);
  lotes.clearLayers();
  $.ajax({
    url : "http://geo.epdvr.com.br/geoserver/nebulosa/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=nebulosa:lotesvr&srsName=EPSG:4326&outputFormat=json&cql_filter=(cadastro='"+insc+"')&format_options=callback:getJson",
    dataType : 'jsonp',
    jsonpCallback: 'getJson',
    success: lotesJson
  });
  lotes.addTo(map);
}

$("#btnInsc").click( function()
{
  //console.log($("#insc").val());
  carregarLayer($("#insc").val())
});

$("#showLote").click( function()
{
  console.log($("#insc_base").val());
  carregarLayer($("#insc_base").val())
});



/*$.ajax({
  url : "http://geo.epdvr.com.br/geoserver/nebulosa/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=nebulosa:educacao_municipal&srsName=EPSG:4326&outputFormat=json&format_options=callback:getJson",
  dataType : 'jsonp',
  jsonpCallback: 'getJSON',
  success: educacaoJson
});*/
/*
$.ajax({
  url : "http://geo.epdvr.com.br/geoserver/nebulosa/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=nebulosa:lotesvr&srsName=EPSG:4326&outputFormat=json&cql_filter=(cadastro='11310184')&format_options=callback:getJson",
  dataType : 'jsonp',
  jsonpCallback: 'getJson',
  success: bairroJson
});
*/
/* fim geojson */

var baseMaps = {
    //"Minimal": minimal,
    "Google": googleRoadMap,
    "Google Satélite": googleSatellite,
    "Noturno": nightTime

};

var overlayMaps = {
    "Limite Municipal": limite,
    "Bairros": bairros,
    "Zoneamento": zoneamento,
    "Logradouros": logradouros
    //"Educação Municipal": educacao,
    //"Lotes": lotes

};

L.control.layers(baseMaps, overlayMaps).addTo(map);

/*
var editableLayers = new L.FeatureGroup();

map.addLayer(editableLayers);

var options = {
    position: 'topleft',
     draw: {
        polygon: false,
        circle: false,
        rectangle: false,
        polyline: false,
        marker: {title: "Adicionar marcador"}
    },
    edit: {
        featureGroup: editableLayers, //REQUIRED!!
    }
};

var drawControl = new L.Control.Draw(options);
map.addControl(drawControl);

map.on('draw:created', function (e) {
    var type = e.layerType,
        layer = e.layer;

    if (type === 'marker') {
        layer.bindPopup('<b>A popup!</b>');
    }

    editableLayers.addLayer(layer);
    console.log("Adicionando: "+layer)
});*/

});
